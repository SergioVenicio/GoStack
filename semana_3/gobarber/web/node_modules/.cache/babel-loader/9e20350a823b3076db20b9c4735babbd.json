{"ast":null,"code":"var _jsxFileName = \"/mnt/dados/goStack/semana_3/gobarber-web/src/components/ToastContainer/Toast/index.tsx\";\nimport React, { useEffect } from 'react';\nimport { FiAlertCircle, FiXCircle, FiCheckCircle, FiInfo } from 'react-icons/fi';\nimport useToastContext from '../../../contexts/ToastContext';\nimport { Container } from './styles';\nconst icons = {\n  info: /*#__PURE__*/React.createElement(FiInfo, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }),\n  error: /*#__PURE__*/React.createElement(FiAlertCircle, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }\n  }),\n  success: /*#__PURE__*/React.createElement(FiCheckCircle, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 14\n    }\n  })\n};\n\nconst Toast = ({\n  message,\n  style\n}) => {\n  const {\n    removeToast\n  } = useToastContext();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [message.id, removeToast]);\n  return /*#__PURE__*/React.createElement(Container, {\n    key: message.id,\n    hasDescription: !!message.description,\n    type: message.type,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, icons[message.type || 'info'], /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, message.title), !!message.description && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, message.description)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiXCircle, {\n    size: 18,\n    onClick: () => removeToast(message.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Toast;","map":{"version":3,"sources":["/mnt/dados/goStack/semana_3/gobarber-web/src/components/ToastContainer/Toast/index.tsx"],"names":["React","useEffect","FiAlertCircle","FiXCircle","FiCheckCircle","FiInfo","useToastContext","Container","icons","info","error","success","Toast","message","style","removeToast","timer","setTimeout","id","clearTimeout","description","type","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,aAAnC,EAAkDC,MAAlD,QAAgE,gBAAhE;AAEA,OAAOC,eAAP,MAA8C,gCAA9C;AAEA,SAASC,SAAT,QAA0B,UAA1B;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,eAAE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI;AAEVC,EAAAA,KAAK,eAAE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG;AAGVC,EAAAA,OAAO,eAAE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHC,CAAd;;AAUA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AACxD,QAAM;AAAEC,IAAAA;AAAF,MAAkBT,eAAe,EAAvC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC3BF,MAAAA,WAAW,CAACF,OAAO,CAACK,EAAT,CAAX;AACH,KAFuB,EAErB,IAFqB,CAAxB;AAIA,WAAO,MAAM;AACTC,MAAAA,YAAY,CAACH,KAAD,CAAZ;AACH,KAFD;AAGH,GARQ,EAQN,CAACH,OAAO,CAACK,EAAT,EAAaH,WAAb,CARM,CAAT;AAUA,sBACI,oBAAC,SAAD;AACE,IAAA,GAAG,EAAEF,OAAO,CAACK,EADf;AAEE,IAAA,cAAc,EAAE,CAAC,CAACL,OAAO,CAACO,WAF5B;AAGE,IAAA,IAAI,EAAEP,OAAO,CAACQ,IAHhB;AAIE,IAAA,KAAK,EAAEP,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOCN,KAAK,CAACK,OAAO,CAACQ,IAAR,IAAgB,MAAjB,CAPN,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASR,OAAO,CAACS,KAAjB,CADA,EAEC,CAAC,CAACT,OAAO,CAACO,WAAV,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,OAAO,CAACO,WAAZ,CAHJ,CATA,eAgBA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,EAAjB;AAAqB,IAAA,OAAO,EAAE,MAAML,WAAW,CAACF,OAAO,CAACK,EAAT,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAhBA,CADJ;AAsBH,CAnCD;;AAqCA,eAAeN,KAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { FiAlertCircle, FiXCircle, FiCheckCircle, FiInfo } from 'react-icons/fi'\n\nimport useToastContext, { ToastMessage } from '../../../contexts/ToastContext'\n\nimport { Container } from './styles'\n\nconst icons = {\n    info: <FiInfo size={24} />,\n    error: <FiAlertCircle size={24} />,\n    success: <FiCheckCircle size={24} />\n}\n\ninterface ToastProps {\n    message: ToastMessage;\n    style: object\n}\nconst Toast: React.FC<ToastProps> = ({ message, style }) => {\n    const { removeToast } = useToastContext()\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            removeToast(message.id)\n        }, 3000);\n\n        return () => {\n            clearTimeout(timer)\n        }\n    }, [message.id, removeToast])\n\n    return (\n        <Container\n          key={message.id}\n          hasDescription={!!message.description}\n          type={message.type}\n          style={style}\n        >\n        \n        {icons[message.type || 'info']}\n\n        <div>\n        <strong>{message.title}</strong>\n        {!!message.description && (\n            <p>{message.description}</p>\n        )}\n        </div>\n\n        <button type=\"button\">\n        <FiXCircle size={18} onClick={() => removeToast(message.id)} />\n        </button>\n        </Container>\n    )\n}\n\nexport default Toast"]},"metadata":{},"sourceType":"module"}