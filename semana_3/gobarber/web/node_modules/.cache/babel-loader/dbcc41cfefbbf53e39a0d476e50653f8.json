{"ast":null,"code":"var _jsxFileName = \"/mnt/dados/goStack/semana_3/gobarber-web/src/contexts/AuthContext.tsx\";\nimport React, { createContext, useCallback, useContext, useState } from \"react\";\nimport api from \"../services/api\";\nconst AuthContext = createContext({});\n\nconst AuthContextProviver = ({\n  children\n}) => {\n  const [data, setData] = useState({});\n  const signIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    const {\n      data\n    } = await api.post(\"/sessions\", {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = data;\n    localStorage.setItem(\"@GOBARBER:token\", token);\n    localStorage.setItem(\"@GOBARBER:user\", JSON.stringify(user));\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      data,\n      setData,\n      signIn\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nconst useAuthContext = () => {\n  const context = useContext(AuthContext);\n  return { ...context\n  };\n};\n\nexport default useAuthContext;\nexport { AuthContextProviver };","map":{"version":3,"sources":["/mnt/dados/goStack/semana_3/gobarber-web/src/contexts/AuthContext.tsx"],"names":["React","createContext","useCallback","useContext","useState","api","AuthContext","AuthContextProviver","children","data","setData","signIn","email","password","post","token","user","localStorage","setItem","JSON","stringify","useAuthContext","context"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,UAA5C,EAAwDC,QAAxD,QAAwE,OAAxE;AAEA,OAAOC,GAAP,MAAgB,iBAAhB;AAYA,MAAMC,WAAW,GAAGL,aAAa,CAAmB,EAAnB,CAAjC;;AAMA,MAAMM,mBAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACtD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAY,EAAZ,CAAhC;AACA,QAAMO,MAAM,GAAGT,WAAW,CACxB,OAAO;AAAEU,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP,KAAiE;AAC/D,UAAM;AAAEJ,MAAAA;AAAF,QAAW,MAAMJ,GAAG,CAACS,IAAJ,CAAS,WAAT,EAAsB;AAC3CF,MAAAA,KAD2C;AAE3CC,MAAAA;AAF2C,KAAtB,CAAvB;AAKA,UAAM;AAAEE,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBP,IAAxB;AACAQ,IAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCH,KAAxC;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvC;AACD,GAVuB,EAWxB,EAXwB,CAA1B;AAcA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEP,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF;AAKD,CArBD;;AAuBA,MAAMa,cAAc,GAAG,MAAM;AAC3B,QAAMC,OAAO,GAAGnB,UAAU,CAACG,WAAD,CAA1B;AAEA,SAAO,EACL,GAAGgB;AADE,GAAP;AAGD,CAND;;AAQA,eAAeD,cAAf;AACA,SAASd,mBAAT","sourcesContent":["import React, { createContext, useCallback, useContext, useState } from \"react\";\n\nimport api from \"../services/api\";\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContextState {\n  data: string;\n  setData: Function;\n  signIn({ email, password }: SignInCredentials): Promise<void>;\n}\nconst AuthContext = createContext<AuthContextState>({} as AuthContextState);\n\ninterface AuthState {\n  token: string;\n  user: object;\n}\nconst AuthContextProviver: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>({} as AuthState);\n  const signIn = useCallback(\n    async ({ email, password }: SignInCredentials): Promise<void> => {\n      const { data } = await api.post(\"/sessions\", {\n        email,\n        password,\n      });\n\n      const { token, user } = data;\n      localStorage.setItem(\"@GOBARBER:token\", token);\n      localStorage.setItem(\"@GOBARBER:user\", JSON.stringify(user));\n    },\n    []\n  );\n\n  return (\n    <AuthContext.Provider value={{ data, setData, signIn }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nconst useAuthContext = () => {\n  const context = useContext(AuthContext);\n\n  return {\n    ...context,\n  };\n};\n\nexport default useAuthContext;\nexport { AuthContextProviver };\n"]},"metadata":{},"sourceType":"module"}