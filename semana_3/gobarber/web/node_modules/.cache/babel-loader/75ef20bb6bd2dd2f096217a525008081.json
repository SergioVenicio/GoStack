{"ast":null,"code":"var _jsxFileName = \"/mnt/dados/nodejs/GoStack/semana_3/gobarber/web/src/routes/Route.tsx\";\nimport React from \"react\";\nimport { Route as ReactDOMRoute, Redirect } from \"react-router-dom\";\nimport useAuthContext from \"../contexts/AuthContext\";\n\nconst Route = ({\n  isPrivate = false,\n  component: Component,\n  ...props\n}) => {\n  const {\n    user\n  } = useAuthContext();\n  return /*#__PURE__*/React.createElement(ReactDOMRoute, Object.assign({}, props, {\n    render: ({\n      location\n    }) => {\n      return isPrivate === !!user ? /*#__PURE__*/React.createElement(Component, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }) : /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: isPrivate ? \"/\" : \"/dashboard\",\n          state: {\n            from: location\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default Route;","map":{"version":3,"sources":["/mnt/dados/nodejs/GoStack/semana_3/gobarber/web/src/routes/Route.tsx"],"names":["React","Route","ReactDOMRoute","Redirect","useAuthContext","isPrivate","component","Component","props","user","location","pathname","state","from"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KAAK,IAAIC,aADX,EAGEC,QAHF,QAIO,kBAJP;AAMA,OAAOC,cAAP,MAA2B,yBAA3B;;AAMA,MAAMH,KAA2B,GAAG,CAAC;AACnCI,EAAAA,SAAS,GAAG,KADuB;AAEnCC,EAAAA,SAAS,EAAEC,SAFwB;AAGnC,KAAGC;AAHgC,CAAD,KAI9B;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAWL,cAAc,EAA/B;AAEA,sBACE,oBAAC,aAAD,oBACMI,KADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEE,MAAAA;AAAF,KAAD,KAAkB;AACxB,aAAOL,SAAS,KAAK,CAAC,CAACI,IAAhB,gBACL,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,gBAGL,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFE,UAAAA,QAAQ,EAAEN,SAAS,GAAG,GAAH,GAAS,YAD1B;AAEFO,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH;AAAR;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF;AAUD,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD,CAxBD;;AA0BA,eAAeT,KAAf","sourcesContent":["import React from \"react\";\nimport {\n  Route as ReactDOMRoute,\n  RouteProps as ReactDOMRouteProps,\n  Redirect,\n} from \"react-router-dom\";\n\nimport useAuthContext from \"../contexts/AuthContext\";\n\ninterface RouteProps extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\nconst Route: React.FC<RouteProps> = ({\n  isPrivate = false,\n  component: Component,\n  ...props\n}) => {\n  const { user } = useAuthContext();\n\n  return (\n    <ReactDOMRoute\n      {...props}\n      render={({ location }) => {\n        return isPrivate === !!user ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isPrivate ? \"/\" : \"/dashboard\",\n              state: { from: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n"]},"metadata":{},"sourceType":"module"}