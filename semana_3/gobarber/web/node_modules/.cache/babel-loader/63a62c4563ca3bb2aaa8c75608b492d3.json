{"ast":null,"code":"var _jsxFileName = \"/mnt/dados/goStack/semana_3/gobarber-web/src/components/ToastContainer/Toast/index.tsx\";\nimport React, { useEffect } from 'react';\nimport { FiAlertCircle, FiXCircle } from 'react-icons/fi';\nimport useToastContext from '../../../contexts/ToastContext';\nimport { Container } from './styles';\n\nconst Toast = ({\n  message\n}) => {\n  const {\n    removeToast\n  } = useToastContext();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    onClick: () => removeToast(message.id),\n    key: message.id,\n    hasDescription: !!message.description,\n    type: message.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiAlertCircle, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, message.title), !!message.description && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, message.description)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiXCircle, {\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Toast;","map":{"version":3,"sources":["/mnt/dados/goStack/semana_3/gobarber-web/src/components/ToastContainer/Toast/index.tsx"],"names":["React","useEffect","FiAlertCircle","FiXCircle","useToastContext","Container","Toast","message","removeToast","timer","setTimeout","id","description","type","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,gBAAzC;AAEA,OAAOC,eAAP,MAA8C,gCAA9C;AAEA,SAASC,SAAT,QAA0B,UAA1B;;AAKA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAkBJ,eAAe,EAAvC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC3BF,MAAAA,WAAW,CAACD,OAAO,CAACI,EAAT,CAAX;AACH,KAFuB,EAErB,IAFqB,CAAxB;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI,oBAAC,SAAD;AACA,IAAA,OAAO,EAAE,MAAMH,WAAW,CAACD,OAAO,CAACI,EAAT,CAD1B;AAEA,IAAA,GAAG,EAAEJ,OAAO,CAACI,EAFb;AAGA,IAAA,cAAc,EAAE,CAAC,CAACJ,OAAO,CAACK,WAH1B;AAIA,IAAA,IAAI,EAAEL,OAAO,CAACM,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMA,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASN,OAAO,CAACO,KAAjB,CADA,EAEC,CAAC,CAACP,OAAO,CAACK,WAAV,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,OAAO,CAACK,WAAZ,CAHJ,CARA,eAeA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAfA,CADJ;AAqBH,CA9BD;;AAgCA,eAAeN,KAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport { FiAlertCircle, FiXCircle } from 'react-icons/fi'\n\nimport useToastContext, { ToastMessage } from '../../../contexts/ToastContext'\n\nimport { Container } from './styles'\n\ninterface ToastProps {\n    message: ToastMessage\n}\nconst Toast: React.FC<ToastProps> = ({ message }) => {\n    const { removeToast } = useToastContext()\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            removeToast(message.id)\n        }, 3000)\n    }, [])\n\n    return (\n        <Container\n        onClick={() => removeToast(message.id)}\n        key={message.id}\n        hasDescription={!!message.description}\n        type={message.type}\n        >\n        <FiAlertCircle size={20} />\n\n        <div>\n        <strong>{message.title}</strong>\n        {!!message.description && (\n            <p>{message.description}</p>\n        )}\n        </div>\n\n        <button type=\"button\">\n        <FiXCircle size={18} />\n        </button>\n        </Container>\n    )\n}\n\nexport default Toast"]},"metadata":{},"sourceType":"module"}