{"ast":null,"code":"var _jsxFileName = \"/mnt/dados/goStack/semana_3/gobarber-web/src/routes/Route.tsx\";\nimport React, { useCallback } from 'react';\nimport { Route as ReactDOMRoute, Redirect } from 'react-router-dom';\nimport useAuthContext from '../contexts/AuthContext';\n\nconst Route = ({\n  isPrivate = false,\n  component: Component,\n  ...props\n}) => {\n  const {\n    user\n  } = useAuthContext();\n  console.log(user);\n  console.log(Component);\n  const handleRender = useCallback(location => {\n    const pathname = isPrivate ? '/' : '/dashboard';\n    return isPrivate === !!user ? /*#__PURE__*/React.createElement(Component, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname,\n        state: {\n          from: location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(ReactDOMRoute, Object.assign({}, props, {\n    render: ({\n      location\n    }) => {\n      handleRender(location);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Route;","map":{"version":3,"sources":["/mnt/dados/goStack/semana_3/gobarber-web/src/routes/Route.tsx"],"names":["React","useCallback","Route","ReactDOMRoute","Redirect","useAuthContext","isPrivate","component","Component","props","user","console","log","handleRender","location","pathname","state","from"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SACIC,KAAK,IAAIC,aADb,EAGIC,QAHJ,QAIO,kBAJP;AAMA,OAAOC,cAAP,MAA2B,yBAA3B;;AAMA,MAAMH,KAA2B,GAAG,CAAC;AACjCI,EAAAA,SAAS,GAAG,KADqB;AAEjCC,EAAAA,SAAS,EAAEC,SAFsB;AAGjC,KAAGC;AAH8B,CAAD,KAI9B;AACF,QAAM;AAAEC,IAAAA;AAAF,MAAWL,cAAc,EAA/B;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AAEA,QAAMK,YAAY,GAAGZ,WAAW,CAAEa,QAAD,IAAc;AAC3C,UAAMC,QAAQ,GAAGT,SAAS,GAAG,GAAH,GAAS,YAAnC;AAEA,WAAOA,SAAS,KAAK,CAAC,CAACI,IAAhB,gBACH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,gBAGH,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEK,QAAAA,QAAF;AAAYC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAGH;AAAT;AAAnB,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAKH,GAR+B,EAQ7B,EAR6B,CAAhC;AAUA,sBACI,oBAAC,aAAD,oBACQL,KADR;AAEI,IAAA,MAAM,EAAE,CAAC;AAAEK,MAAAA;AAAF,KAAD,KAAkB;AAAED,MAAAA,YAAY,CAACC,QAAD,CAAZ;AAAwB,KAFxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAMH,CA1BD;;AA4BA,eAAeZ,KAAf","sourcesContent":["import React, { useCallback } from 'react'\nimport { \n    Route as ReactDOMRoute,\n    RouteProps as ReactDOMRouteProps,\n    Redirect\n} from 'react-router-dom'\n\nimport useAuthContext from '../contexts/AuthContext'\n\ninterface RouteProps extends ReactDOMRouteProps {\n    isPrivate?: boolean;\n    component: React.ComponentType\n}\nconst Route: React.FC<RouteProps> = ({ \n    isPrivate = false,\n    component: Component,\n    ...props\n}) => {\n    const { user } = useAuthContext()\n\n    console.log(user)\n    console.log(Component)\n\n    const handleRender = useCallback((location) => {\n        const pathname = isPrivate ? '/' : '/dashboard'\n\n        return isPrivate === !!user ? (\n            <Component />\n        ) : (\n            <Redirect to={{ pathname, state: { from : location } }} />\n        )\n    }, [])\n\n    return (\n        <ReactDOMRoute\n            {...props}\n            render={({ location }) => { handleRender(location) }}\n        />\n    )\n}\n\nexport default Route"]},"metadata":{},"sourceType":"module"}