{"ast":null,"code":"var _jsxFileName = \"/mnt/dados/goStack/semana_3/gobarber-web/src/contexts/ToastContext.tsx\";\nimport React, { createContext, useCallback, useContext, useState } from 'react';\nimport { v4 } from 'uuid';\nimport ToastContainer from '../components/ToastContainer';\nconst toastContext = createContext({});\n\nconst ToastContextProvider = ({\n  children\n}) => {\n  const [messages, setMessages] = useState([]);\n  const addToast = useCallback(message => {\n    const id = v4();\n  }, []);\n  const removeToast = useCallback(() => {}, []);\n  return /*#__PURE__*/React.createElement(toastContext.Provider, {\n    value: {\n      addToast,\n      removeToast\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, children, /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst useToastContext = () => {\n  const context = useContext(toastContext);\n\n  if (!context) {\n    throw new Error(\"useToastContext must be used within ToastContextProviver\");\n  }\n\n  return context;\n};\n\nexport default useToastContext;\nexport { ToastContextProvider };","map":{"version":3,"sources":["/mnt/dados/goStack/semana_3/gobarber-web/src/contexts/ToastContext.tsx"],"names":["React","createContext","useCallback","useContext","useState","v4","ToastContainer","toastContext","ToastContextProvider","children","messages","setMessages","addToast","message","id","removeToast","useToastContext","context","Error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,UAA5C,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,SAASC,EAAT,QAAmB,MAAnB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AAYA,MAAMC,YAAY,GAAGN,aAAa,CAAmB,EAAnB,CAAlC;;AAEA,MAAMO,oBAA8B,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACrD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAiB,EAAjB,CAAxC;AAEA,QAAMQ,QAAQ,GAAGV,WAAW,CAAEW,OAAD,IAAqB;AAChD,UAAMC,EAAE,GAAGT,EAAE,EAAb;AACD,GAF2B,EAEzB,EAFyB,CAA5B;AAIA,QAAMU,WAAW,GAAGb,WAAW,CAAC,MAAM,CAErC,CAF8B,EAE5B,EAF4B,CAA/B;AAIA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAF;AAAYG,MAAAA;AAAZ,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QADH,eAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAjBD;;AAoBA,MAAMO,eAAe,GAAG,MAAwB;AAC9C,QAAMC,OAAO,GAAGd,UAAU,CAACI,YAAD,CAA1B;;AAEA,MAAI,CAACU,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,0DAAV,CAAN;AACD;;AAED,SAAOD,OAAP;AACD,CARD;;AAUA,eAAeD,eAAf;AACA,SAASR,oBAAT","sourcesContent":["import React, { createContext, useCallback, useContext, useState } from 'react';\nimport { v4 } from 'uuid'\n\nimport ToastContainer from '../components/ToastContainer'\n\ninterface ToastMessage {\n  id: string;\n  type?: 'success' | 'error'| 'info';\n  description?: string;\n  title: string;\n}\ninterface ToastContextData {\n  addToast(): void;\n  removeToast(): void;\n}\nconst toastContext = createContext<ToastContextData>({} as ToastContextData)\n\nconst ToastContextProvider: React.FC = ({children}) => {\n  const [messages, setMessages] = useState<ToastMessage[]>([])\n\n  const addToast = useCallback((message: string) => {\n    const id = v4()\n  }, [])\n\n  const removeToast = useCallback(() => {\n    \n  }, [])\n\n  return (\n    <toastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer />\n    </toastContext.Provider>\n  )\n}\n\n\nconst useToastContext = (): ToastContextData => {\n  const context = useContext(toastContext);\n\n  if (!context) {\n    throw new Error(\"useToastContext must be used within ToastContextProviver\");\n  }\n\n  return context;\n}\n\nexport default useToastContext\nexport { ToastContextProvider }"]},"metadata":{},"sourceType":"module"}