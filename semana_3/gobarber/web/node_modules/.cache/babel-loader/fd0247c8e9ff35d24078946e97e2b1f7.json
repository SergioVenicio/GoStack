{"ast":null,"code":"var _jsxFileName = \"/mnt/dados/goStack/semana_3/gobarber-web/src/routes/Route.tsx\";\nimport React from 'react';\nimport { Route as ReactDOMRoute, Redirect } from 'react-router-dom';\nimport useAuthContext from '../contexts/AuthContext';\n\nconst Route = ({\n  isPrivate = false,\n  component: Component,\n  ...props\n}) => {\n  const {\n    user\n  } = useAuthContext();\n\n  const handleRender = localtion => {\n    return isPrivate === !!user ? /*#__PURE__*/React.createElement(Component, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: isPrivate ? '/' : '/dashboard',\n        state: {\n          from: location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ReactDOMRoute, Object.assign({}, props, {\n    render: ({\n      location\n    }) => handleRender(location),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Route;","map":{"version":3,"sources":["/mnt/dados/goStack/semana_3/gobarber-web/src/routes/Route.tsx"],"names":["React","Route","ReactDOMRoute","Redirect","useAuthContext","isPrivate","component","Component","props","user","handleRender","localtion","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,KAAK,IAAIC,aADb,EAIIC,QAJJ,QAKO,kBALP;AAOA,OAAOC,cAAP,MAA2B,yBAA3B;;AAMA,MAAMH,KAA2B,GAAG,CAAC;AACjCI,EAAAA,SAAS,GAAG,KADqB;AAEjCC,EAAAA,SAAS,EAAEC,SAFsB;AAGjC,KAAGC;AAH8B,CAAD,KAI9B;AACF,QAAM;AAAEC,IAAAA;AAAF,MAAWL,cAAc,EAA/B;;AACA,QAAMM,YAAY,GAAIC,SAAD,IAAe;AAChC,WAAON,SAAS,KAAK,CAAC,CAACI,IAAhB,gBACH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,gBAGH,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AACVG,QAAAA,QAAQ,EAAEP,SAAS,GAAG,GAAH,GAAS,YADlB;AAEVQ,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEC;AAAR;AAFG,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAQH,GATD;;AAWA,sBACI,oBAAC,aAAD,oBACQP,KADR;AAEI,IAAA,MAAM,EAAE,CAAC;AAACO,MAAAA;AAAD,KAAD,KAAgBL,YAAY,CAACK,QAAD,CAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAMH,CAvBD;;AAyBA,eAAed,KAAf","sourcesContent":["import React from 'react'\nimport { \n    Route as ReactDOMRoute,\n    RouteProps as ReactDOMRouteProps,\n    LinkProps,\n    Redirect\n} from 'react-router-dom'\n\nimport useAuthContext from '../contexts/AuthContext'\n\ninterface RouteProps extends ReactDOMRouteProps {\n    isPrivate?: boolean;\n    component: React.ComponentType\n}\nconst Route: React.FC<RouteProps> = ({ \n    isPrivate = false,\n    component: Component,\n    ...props\n}) => {\n    const { user } = useAuthContext()\n    const handleRender = (localtion) => {\n        return isPrivate === !!user ? (\n            <Component />\n        ) : (\n            <Redirect to={{\n                pathname: isPrivate ? '/' : '/dashboard',\n                state: { from: location}\n            }} />\n        )\n    } \n\n    return (\n        <ReactDOMRoute\n            {...props}\n            render={({location}) => handleRender(location)}\n        />\n    )\n}\n\nexport default Route"]},"metadata":{},"sourceType":"module"}