{"ast":null,"code":"var _jsxFileName = \"/mnt/dados/goStack/semana_3/gobarber-web/src/pages/signin/index.tsx\";\nimport React, { useRef, useCallback } from \"react\";\nimport { FiLogIn, FiMail, FiLock } from \"react-icons/fi\";\nimport { Form } from \"@unform/web\";\nimport * as Yup from \"yup\";\nimport useAuthContext from \"../../contexts/AuthContext\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport { Background, Container, Content } from \"./styles\";\nimport logo from \"../../assets/logo.svg\";\nimport getValidationErrors from \"../../utils/getValidationErrors\";\n\nconst SignIn = () => {\n  const formRef = useRef(null);\n  const {\n    signIn\n  } = useAuthContext();\n  const handleSubmit = useCallback(async data => {\n    var _formRef$current;\n\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n    const schema = Yup.object().shape({\n      email: Yup.string().required(\"O email é obrigatório\").email(\"Digite um email válido\"),\n      password: Yup.string().required(\"A senha é obrigatória\")\n    });\n\n    try {\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      await signIn({\n        email: data.email,\n        password: data.password\n      });\n    } catch (error) {\n      if (error instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(error);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n      } else {// Toast\n      }\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"GoBarber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Fa\\xE7a seu logon\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    type: \"text\",\n    placeholder: \"E-mail\",\n    icon: FiMail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Senha\",\n    icon: FiLock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Entrar\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Esqueci minha senha\")), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiLogIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), \"Criar conta\")), /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/mnt/dados/goStack/semana_3/gobarber-web/src/pages/signin/index.tsx"],"names":["React","useRef","useCallback","FiLogIn","FiMail","FiLock","Form","Yup","useAuthContext","Input","Button","Background","Container","Content","getValidationErrors","SignIn","formRef","signIn","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","password","validate","abortEarly","error","ValidationError","errors","logo"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback } from \"react\";\nimport { FiLogIn, FiMail, FiLock } from \"react-icons/fi\";\nimport { FormHandles } from \"@unform/core\";\nimport { Form } from \"@unform/web\";\nimport * as Yup from \"yup\";\n\nimport useAuthContext from \"../../contexts/AuthContext\";\nimport useToastContext from '../../contexts/ToastContext'\n\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\n\nimport { Background, Container, Content } from \"./styles\";\n\nimport logo from \"../../assets/logo.svg\";\nimport getValidationErrors from \"../../utils/getValidationErrors\";\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { signIn } = useAuthContext();\n\n  const handleSubmit = useCallback(async (data): Promise<void> => {\n    formRef.current?.setErrors({});\n    const schema = Yup.object().shape({\n      email: Yup.string()\n        .required(\"O email é obrigatório\")\n        .email(\"Digite um email válido\"),\n      password: Yup.string().required(\"A senha é obrigatória\"),\n    });\n\n    try {\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n      await signIn({\n        email: data.email,\n        password: data.password,\n      });\n    } catch (error) {\n      if (error instanceof Yup.ValidationError) {\n        const errors = getValidationErrors(error);\n        formRef.current?.setErrors(errors);\n      } else {\n        // Toast\n      }\n    }\n  }, []);\n\n  return (\n    <Container>\n      <Content>\n        <img src={logo} alt=\"GoBarber\" />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu logon</h1>\n\n          <Input name=\"email\" type=\"text\" placeholder=\"E-mail\" icon={FiMail} />\n          <Input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Senha\"\n            icon={FiLock}\n          />\n\n          <Button type=\"submit\">Entrar</Button>\n\n          <a href=\"#\">Esqueci minha senha</a>\n        </Form>\n\n        <a href=\"#\">\n          <FiLogIn />\n          Criar conta\n        </a>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}