{"ast":null,"code":"var _jsxFileName = \"/mnt/dados/nodejs/GoStack/semana_3/gobarber/web/src/pages/Dashboard/index.tsx\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport DayPicker from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\nimport { isToday, format, parseISO, isAfter } from \"date-fns\";\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport { Calendar, Container, Content, Header, HeaderContent, Profile, Schedule, NextAppointment, Section, Appointment } from \"./styles\";\nimport logo from \"../../assets/logo.svg\";\nimport { FiClock, FiPower } from \"react-icons/fi\";\nimport useAuthContext from \"../../contexts/AuthContext\";\nimport api from \"../../services/api\";\n\nconst Dashboard = () => {\n  const {\n    signOut,\n    user\n  } = useAuthContext();\n  const [appointments, setAppointments] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [monthAvailabity, setMonthAvailabity] = useState([]);\n  const selectedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'Dia' dd 'de' MMMM\", {\n      locale: ptBR\n    });\n  }, [selectedDate]);\n  const selectedWeekDay = useMemo(() => {\n    return format(selectedDate, \"cccc\", {\n      locale: ptBR\n    });\n  }, [selectedDate]);\n  const nextAppointment = useMemo(() => {\n    const filterDate = new Date();\n    return appointments.find(appointment => {\n      isAfter(parseISO(appointment.date), filterDate);\n    });\n  }, [appointments]);\n  const morningAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.date).getHours() < 12;\n    });\n  }, [appointments]);\n  const afternoonAppointments = useMemo(() => {\n    return appointments.filter(appointment => {\n      return parseISO(appointment.date).getHours() >= 12;\n    });\n  }, [appointments]);\n  const handleDateChange = useCallback((day, modifiers) => {\n    if (modifiers.available) {\n      setSelectedDate(day);\n    }\n  }, []);\n  const handleMonthChange = useCallback(month => {\n    setCurrentMonth(month);\n  }, []);\n  const disableDays = useMemo(() => {\n    const dates = monthAvailabity.filter(({\n      available\n    }) => !available).map(monthDay => {\n      const year = currentMonth.getFullYear();\n      const month = currentMonth.getMonth();\n      return new Date(year, month, monthDay.day);\n    });\n    return dates;\n  }, [currentMonth, monthAvailabity]);\n  useEffect(() => {\n    api.get(`/providers/${user.id}/month-availability`, {\n      params: {\n        year: currentMonth.getFullYear(),\n        month: currentMonth.getMonth() + 1\n      }\n    }).then(({\n      data\n    }) => {\n      setMonthAvailabity(data);\n    });\n  }, [currentMonth, user.id]);\n  useEffect(() => {\n    api.get(\"appointments/me\", {\n      params: {\n        year: selectedDate.getFullYear(),\n        month: selectedDate.getMonth() + 1,\n        day: selectedDate.getDate()\n      }\n    }).then(({\n      data\n    }) => {\n      const appoitmentsFormatted = data.map(appointment => {\n        return { ...appointment,\n          hourFormatted: format(parseISO(appointment.date), \"HH:mm\")\n        };\n      });\n      setAppointments(appoitmentsFormatted);\n    });\n  }, [selectedDate]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeaderContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Gobarber logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Profile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user.avatar_url,\n    alt: user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, \"Bem-vindo\"), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, user.name))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: signOut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiPower, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Schedule, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, \"Hor\\xE1rios agendados\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, isToday(selectedDate) ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 38\n    }\n  }, \"Hoje\") : null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, selectedDateAsText), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, selectedWeekDay)), /*#__PURE__*/React.createElement(NextAppointment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"Atendimento a seguir\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: nextAppointment.user.avatar_url,\n    alt: nextAppointment.user.avatar_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, nextAppointment / user.name), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FiClock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }), \"08:00\"))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, \"Manh\\xE3\"), morningAppointments.map(appointment => /*#__PURE__*/React.createElement(Appointment, {\n    key: appointment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiClock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }), appointment.hourFormatted), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: appointment.user.avatar_url,\n    alt: appointment.user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }, appointment.user.name))))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, \"Tarde\"), afternoonAppointments.map(appointment => /*#__PURE__*/React.createElement(Appointment, {\n    key: appointment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FiClock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }), appointment.hourFormatted), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: appointment.user.avatar_url,\n    alt: appointment.user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }\n  }, appointment.user.name)))))), /*#__PURE__*/React.createElement(Calendar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DayPicker, {\n    weekdaysShort: [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"],\n    fromMonth: new Date(),\n    disabledDays: [{\n      daysOfWeek: [0, 6]\n    }, ...disableDays],\n    modifiers: {\n      available: {\n        daysOfWeek: [1, 2, 3, 4, 5]\n      }\n    },\n    selectedDays: selectedDate,\n    onDayClick: handleDateChange,\n    onMonthChange: handleMonthChange,\n    months: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/mnt/dados/nodejs/GoStack/semana_3/gobarber/web/src/pages/Dashboard/index.tsx"],"names":["React","useCallback","useEffect","useMemo","useState","DayPicker","isToday","format","parseISO","isAfter","ptBR","Calendar","Container","Content","Header","HeaderContent","Profile","Schedule","NextAppointment","Section","Appointment","FiClock","FiPower","useAuthContext","api","Dashboard","signOut","user","appointments","setAppointments","selectedDate","setSelectedDate","Date","currentMonth","setCurrentMonth","monthAvailabity","setMonthAvailabity","selectedDateAsText","locale","selectedWeekDay","nextAppointment","filterDate","find","appointment","date","morningAppointments","filter","getHours","afternoonAppointments","handleDateChange","day","modifiers","available","handleMonthChange","month","disableDays","dates","map","monthDay","year","getFullYear","getMonth","get","id","params","then","data","getDate","appoitmentsFormatted","hourFormatted","logo","avatar_url","name","daysOfWeek"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport DayPicker, { DayModifiers } from \"react-day-picker\";\nimport \"react-day-picker/lib/style.css\";\n\nimport { isToday, format, parseISO, isAfter } from \"date-fns\";\nimport ptBR from \"date-fns/locale/pt-BR\";\n\nimport {\n  Calendar,\n  Container,\n  Content,\n  Header,\n  HeaderContent,\n  Profile,\n  Schedule,\n  NextAppointment,\n  Section,\n  Appointment,\n} from \"./styles\";\n\nimport logo from \"../../assets/logo.svg\";\nimport { FiClock, FiPower } from \"react-icons/fi\";\nimport useAuthContext from \"../../contexts/AuthContext\";\nimport api from \"../../services/api\";\n\ninterface MonthAvailabityItem {\n  day: number;\n  available: boolean;\n}\n\ninterface IAppointment {\n  id: string;\n  date: string;\n  hourFormatted: string;\n  user: {\n    name: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const { signOut, user } = useAuthContext();\n  const [appointments, setAppointments] = useState<IAppointment[]>([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [monthAvailabity, setMonthAvailabity] = useState<MonthAvailabityItem[]>(\n    []\n  );\n\n  const selectedDateAsText = useMemo(() => {\n    return format(selectedDate, \"'Dia' dd 'de' MMMM\", {\n      locale: ptBR,\n    });\n  }, [selectedDate]);\n\n  const selectedWeekDay = useMemo(() => {\n    return format(selectedDate, \"cccc\", {\n      locale: ptBR,\n    });\n  }, [selectedDate]);\n\n  const nextAppointment = useMemo(() => {\n    const filterDate = new Date();\n    return appointments.find((appointment) => {\n      isAfter(parseISO(appointment.date), filterDate);\n    });\n  }, [appointments]);\n\n  const morningAppointments = useMemo(() => {\n    return appointments.filter((appointment) => {\n      return parseISO(appointment.date).getHours() < 12;\n    });\n  }, [appointments]);\n\n  const afternoonAppointments = useMemo(() => {\n    return appointments.filter((appointment) => {\n      return parseISO(appointment.date).getHours() >= 12;\n    });\n  }, [appointments]);\n\n  const handleDateChange = useCallback((day: Date, modifiers: DayModifiers) => {\n    if (modifiers.available) {\n      setSelectedDate(day);\n    }\n  }, []);\n\n  const handleMonthChange = useCallback((month: Date) => {\n    setCurrentMonth(month);\n  }, []);\n\n  const disableDays = useMemo(() => {\n    const dates = monthAvailabity\n      .filter(({ available }) => !available)\n      .map((monthDay) => {\n        const year = currentMonth.getFullYear();\n        const month = currentMonth.getMonth();\n        return new Date(year, month, monthDay.day);\n      });\n\n    return dates;\n  }, [currentMonth, monthAvailabity]);\n\n  useEffect(() => {\n    api\n      .get(`/providers/${user.id}/month-availability`, {\n        params: {\n          year: currentMonth.getFullYear(),\n          month: currentMonth.getMonth() + 1,\n        },\n      })\n      .then(({ data }) => {\n        setMonthAvailabity(data);\n      });\n  }, [currentMonth, user.id]);\n\n  useEffect(() => {\n    api\n      .get<IAppointment[]>(\"appointments/me\", {\n        params: {\n          year: selectedDate.getFullYear(),\n          month: selectedDate.getMonth() + 1,\n          day: selectedDate.getDate(),\n        },\n      })\n      .then(({ data }) => {\n        const appoitmentsFormatted = data.map((appointment) => {\n          return {\n            ...appointment,\n            hourFormatted: format(parseISO(appointment.date), \"HH:mm\"),\n          };\n        });\n        setAppointments(appoitmentsFormatted);\n      });\n  }, [selectedDate]);\n\n  return (\n    <Container>\n      <Header>\n        <HeaderContent>\n          <img src={logo} alt=\"Gobarber logo\" />\n\n          <Profile>\n            <img src={user.avatar_url} alt={user.name} />\n\n            <div>\n              <span>Bem-vindo</span>\n              <strong>{user.name}</strong>\n            </div>\n          </Profile>\n\n          <button type=\"button\" onClick={signOut}>\n            <FiPower />\n          </button>\n        </HeaderContent>\n      </Header>\n\n      <Content>\n        <Schedule>\n          <h1>Horários agendados</h1>\n          <p>\n            {isToday(selectedDate) ? <span>Hoje</span> : null}\n            <span>{selectedDateAsText}</span>\n            <span>{selectedWeekDay}</span>\n          </p>\n\n          <NextAppointment>\n            <strong>Atendimento a seguir</strong>\n            <div>\n              <img\n                src={nextAppointment.user.avatar_url}\n                alt={nextAppointment.user.avatar_url}\n              />\n\n              <strong>{nextAppointment / user.name}</strong>\n              <span>\n                <FiClock />\n                08:00\n              </span>\n            </div>\n          </NextAppointment>\n\n          <Section>\n            <strong>Manhã</strong>\n\n            {morningAppointments.map((appointment) => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock />\n                  {appointment.hourFormatted}\n                </span>\n\n                <div>\n                  <img\n                    src={appointment.user.avatar_url}\n                    alt={appointment.user.name}\n                  />\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n          <Section>\n            <strong>Tarde</strong>\n\n            {afternoonAppointments.map((appointment) => (\n              <Appointment key={appointment.id}>\n                <span>\n                  <FiClock />\n                  {appointment.hourFormatted}\n                </span>\n\n                <div>\n                  <img\n                    src={appointment.user.avatar_url}\n                    alt={appointment.user.name}\n                  />\n                  <strong>{appointment.user.name}</strong>\n                </div>\n              </Appointment>\n            ))}\n          </Section>\n        </Schedule>\n        <Calendar>\n          <DayPicker\n            weekdaysShort={[\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"]}\n            fromMonth={new Date()}\n            disabledDays={[{ daysOfWeek: [0, 6] }, ...disableDays]}\n            modifiers={{\n              available: { daysOfWeek: [1, 2, 3, 4, 5] },\n            }}\n            selectedDays={selectedDate}\n            onDayClick={handleDateChange}\n            onMonthChange={handleMonthChange}\n            months={[\n              \"Janeiro\",\n              \"Fevereiro\",\n              \"Março\",\n              \"Abril\",\n              \"Maio\",\n              \"Junho\",\n              \"Julho\",\n              \"Agosto\",\n              \"Setembro\",\n              \"Outubro\",\n              \"Novembro\",\n              \"Dezembro\",\n            ]}\n          />\n        </Calendar>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}