{"ast":null,"code":"var _jsxFileName = \"/mnt/dados/goStack/semana_3/gobarber-web/src/components/Input/index.tsx\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useField } from \"@unform/core\";\nimport { Container } from \"./styles\";\n\nconst Input = ({\n  name,\n  type,\n  placeholder,\n  icon: Icon\n}) => {\n  const inputRef = useRef(null);\n  const {\n    fieldName,\n    defaultValue,\n    error,\n    registerField\n  } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, Icon && /*#__PURE__*/React.createElement(Icon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: name,\n    type: type,\n    placeholder: placeholder,\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Input;","map":{"version":3,"sources":["/mnt/dados/goStack/semana_3/gobarber-web/src/components/Input/index.tsx"],"names":["React","useEffect","useRef","useField","Container","Input","name","type","placeholder","icon","Icon","inputRef","fieldName","defaultValue","error","registerField","ref","current"],"mappings":";AAAA,OAAOA,KAAP,IAAqCC,SAArC,EAAgDC,MAAhD,QAA8D,OAA9D;AAGA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAASC,SAAT,QAA0B,UAA1B;;AAMA,MAAMC,KAA2B,GAAG,CAAC;AACnCC,EAAAA,IADmC;AAEnCC,EAAAA,IAFmC;AAGnCC,EAAAA,WAHmC;AAInCC,EAAAA,IAAI,EAAEC;AAJ6B,CAAD,KAK9B;AACJ,QAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM;AAAEU,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAAoDZ,QAAQ,CAACG,IAAD,CAAlE;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,aAAa,CAAC;AACZT,MAAAA,IAAI,EAAEM,SADM;AAEZI,MAAAA,GAAG,EAAEL,QAAQ,CAACM;AAFF,KAAD,CAAb;AAID,GALQ,EAKN,EALM,CAAT;AAMA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,eAEE;AAAO,IAAA,IAAI,EAAEJ,IAAb;AAAmB,IAAA,IAAI,EAAEC,IAAzB;AAA+B,IAAA,WAAW,EAAEC,WAA5C;AAAyD,IAAA,GAAG,EAAEG,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CArBD;;AAuBA,eAAeN,KAAf","sourcesContent":["import React, { InputHTMLAttributes, useEffect, useRef } from \"react\";\nimport { IconBaseProps } from \"react-icons\";\n\nimport { useField } from \"@unform/core\";\n\nimport { Container } from \"./styles\";\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\nconst Input: React.FC<InputProps> = ({\n  name,\n  type,\n  placeholder,\n  icon: Icon,\n}) => {\n  const inputRef = useRef(null);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n    });\n  }, []);\n  return (\n    <Container>\n      {Icon && <Icon size={20} />}\n      <input name={name} type={type} placeholder={placeholder} ref={inputRef} />\n    </Container>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}